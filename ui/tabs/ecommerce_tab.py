import streamlit as st
from database.queries import (
    generar_query_comparativa_eventos,
    generar_query_ingresos_transacciones,
    generar_query_productos_mas_vendidos,
    generar_query_relacion_productos
)
from visualization.ecommerce_visualizations import (
    mostrar_comparativa_eventos,
    mostrar_ingresos_transacciones,
    mostrar_productos_mas_vendidos,
    mostrar_relacion_productos
)
from database.connection import run_query

def show_ecommerce_tab(client, project, dataset, start_date, end_date):
    """Pesta√±a de Ecommerce con an√°lisis completo de eventos y productos"""
    
    # Inicializar session_state para mantener datos y estado de expanders
    if 'ecommerce_funnel_data' not in st.session_state:
        st.session_state.ecommerce_funnel_data = None
    if 'ecommerce_funnel_show' not in st.session_state:
        st.session_state.ecommerce_funnel_show = False
    
    if 'ecommerce_ingresos_data' not in st.session_state:
        st.session_state.ecommerce_ingresos_data = None
    if 'ecommerce_ingresos_show' not in st.session_state:
        st.session_state.ecommerce_ingresos_show = False
    
    if 'ecommerce_productos_data' not in st.session_state:
        st.session_state.ecommerce_productos_data = None
    if 'ecommerce_productos_show' not in st.session_state:
        st.session_state.ecommerce_productos_show = False
    
    if 'ecommerce_relacion_data' not in st.session_state:
        st.session_state.ecommerce_relacion_data = None
    if 'ecommerce_relacion_show' not in st.session_state:
        st.session_state.ecommerce_relacion_show = False
    
    # Secci√≥n 1: Funnel de Conversi√≥n
    with st.expander("üìä Funnel de Conversi√≥n", expanded=st.session_state.ecommerce_funnel_show):
        st.info("""
        **An√°lisis completo del funnel de ecommerce:**
        - 5 etapas: page_view ‚Üí view_item ‚Üí add_to_cart ‚Üí begin_checkout ‚Üí purchase
        - Tasas de conversi√≥n entre etapas
        - Identificaci√≥n de puntos de fuga
        - M√©tricas de usuarios √∫nicos por evento
        """)
        
        if st.button("Ejecutar An√°lisis de Funnel", key="btn_funnel"):
            with st.spinner("Analizando funnel de conversi√≥n..."):
                query = generar_query_comparativa_eventos(project, dataset, start_date, end_date)
                df = run_query(client, query)
                st.session_state.ecommerce_funnel_data = df
                st.session_state.ecommerce_funnel_show = True
        
        # Mostrar resultados si existen
        if st.session_state.ecommerce_funnel_show and st.session_state.ecommerce_funnel_data is not None:
            mostrar_comparativa_eventos(st.session_state.ecommerce_funnel_data)
    
    # Secci√≥n 2: Ingresos y Transacciones
    with st.expander("üí∞ Ingresos y Transacciones", expanded=st.session_state.ecommerce_ingresos_show):
        st.info("""
        **An√°lisis de revenue y transacciones:**
        - Evoluci√≥n temporal de ingresos
        - N√∫mero de transacciones √∫nicas
        - Ticket medio (AOV - Average Order Value)
        - Tendencias de compra por fecha
        - Identificaci√≥n de picos de ventas
        """)
        
        if st.button("Analizar Ingresos y Transacciones", key="btn_ingresos"):
            with st.spinner("Calculando ingresos y transacciones..."):
                query = generar_query_ingresos_transacciones(project, dataset, start_date, end_date)
                df = run_query(client, query)
                st.session_state.ecommerce_ingresos_data = df
                st.session_state.ecommerce_ingresos_show = True
        
        # Mostrar resultados si existen
        if st.session_state.ecommerce_ingresos_show and st.session_state.ecommerce_ingresos_data is not None:
            mostrar_ingresos_transacciones(st.session_state.ecommerce_ingresos_data)
    
    # Secci√≥n 3: Productos M√°s Vendidos
    with st.expander("üèÜ Productos M√°s Vendidos", expanded=st.session_state.ecommerce_productos_show):
        st.info("""
        **Performance de productos por ingresos:**
        - Top productos ordenados por revenue
        - Cantidad total vendida por producto
        - N√∫mero de compras (transacciones)
        - An√°lisis de correlaci√≥n cantidad vs ingresos
        - Identificaci√≥n de productos estrella
        - Productos con nombre normalizado (item_name)
        """)
        
        if st.button("Analizar Performance de Productos", key="btn_productos"):
            with st.spinner("Analizando productos m√°s vendidos..."):
                query = generar_query_productos_mas_vendidos(project, dataset, start_date, end_date)
                df = run_query(client, query)
                st.session_state.ecommerce_productos_data = df
                st.session_state.ecommerce_productos_show = True
        
        # Mostrar resultados si existen
        if st.session_state.ecommerce_productos_show and st.session_state.ecommerce_productos_data is not None:
            mostrar_productos_mas_vendidos(st.session_state.ecommerce_productos_data)
    
    # Secci√≥n 4: Relaci√≥n ID vs Nombre de Productos
    with st.expander("üîç Relaci√≥n ID vs Nombre de Productos", expanded=st.session_state.ecommerce_relacion_show):
        st.info("""
        **An√°lisis de consistencia de datos:**
        - Validaci√≥n de relaci√≥n item_id ‚Üî item_name
        - Detecci√≥n de productos con m√∫ltiples nombres
        - Detecci√≥n de nombres con m√∫ltiples IDs
        - Identificaci√≥n de ineficiencias en el tracking
        - Recomendaciones de limpieza de datos
        """)
        
        if st.button("Analizar Relaci√≥n Productos", key="btn_relacion"):
            with st.spinner("Analizando relaci√≥n ID vs Nombre..."):
                query = generar_query_relacion_productos(project, dataset, start_date, end_date)
                df = run_query(client, query)
                st.session_state.ecommerce_relacion_data = df
                st.session_state.ecommerce_relacion_show = True
        
        # Mostrar resultados si existen
        if st.session_state.ecommerce_relacion_show and st.session_state.ecommerce_relacion_data is not None:
            mostrar_relacion_productos(st.session_state.ecommerce_relacion_data)
    
    # Mensaje de completado
    st.success("‚úÖ **Todas las consultas de Ecommerce est√°n disponibles!**")
